#!/usr/bin/env ruby
#--
# Color
# Colour management with Ruby
# http://rubyforge.org/projects/color
#   Version 1.4.0
#
# Licensed under a MIT-style licence. See Licence.txt in the main
# distribution for full licensing information.
#
# Copyright (c) 2005 - 2007 Austin Ziegler and Matt Lyon
#
# $Id: test_all.rb 55 2007-02-03 23:29:34Z austin $
#++

$LOAD_PATH.unshift("#{File.dirname(__FILE__)}/../lib") if __FILE__ == $0
require 'test/unit'
require 'color'
require 'color/palette/psp'

module TestColor
  module TestPalette
    class TestPSP < Test::Unit::TestCase
      def setup
        wsc = <<-EOS
JASC-PAL
0100
256
255 255 255
255 255 204
255 255 153
255 255 102
255 255 51
255 255 0
255 204 255
255 204 204
255 204 153
255 204 102
255 204 51
255 204 0
255 153 255
255 153 204
255 153 153
255 153 102
255 153 51
255 153 0
255 102 255
255 102 204
255 102 153
255 102 102
255 102 51
255 102 0
255 51 255
255 51 204
255 51 153
255 51 102
255 51 51
255 51 0
255 0 255
255 0 204
255 0 153
255 0 102
255 0 51
255 0 0
204 255 255
204 255 204
204 255 153
204 255 102
204 255 51
204 255 0
204 204 255
204 204 204
204 204 153
204 204 102
204 204 51
204 204 0
204 153 255
204 153 204
204 153 153
204 153 102
204 153 51
204 153 0
204 102 255
204 102 204
204 102 153
204 102 102
204 102 51
204 102 0
204 51 255
204 51 204
204 51 153
204 51 102
204 51 51
204 51 0
204 0 255
204 0 204
204 0 153
204 0 102
204 0 51
204 0 0
153 255 255
153 255 204
153 255 153
153 255 102
153 255 51
153 255 0
153 204 255
153 204 204
153 204 153
153 204 102
153 204 51
153 204 0
153 153 255
153 153 204
153 153 153
153 153 102
153 153 51
153 153 0
153 102 255
153 102 204
153 102 153
153 102 102
153 102 51
153 102 0
153 51 255
153 51 204
153 51 153
153 51 102
153 51 51
153 51 0
153 0 255
153 0 204
153 0 153
153 0 102
153 0 51
153 0 0
102 255 255
102 255 204
102 255 153
102 255 102
102 255 51
102 255 0
102 204 255
102 204 204
102 204 153
102 204 102
102 204 51
102 204 0
102 153 255
102 153 204
102 153 153
102 153 102
102 153 51
102 153 0
102 102 255
102 102 204
102 102 153
102 102 102
102 102 51
102 102 0
102 51 255
102 51 204
102 51 153
102 51 102
102 51 51
102 51 0
102 0 255
102 0 204
102 0 153
102 0 102
102 0 51
102 0 0
51 255 255
51 255 204
51 255 153
51 255 102
51 255 51
51 255 0
51 204 255
51 204 204
51 204 153
51 204 102
51 204 51
51 204 0
51 153 255
51 153 204
51 153 153
51 153 102
51 153 51
51 153 0
51 102 255
51 102 204
51 102 153
51 102 102
51 102 51
51 102 0
51 51 255
51 51 204
51 51 153
51 51 102
51 51 51
51 51 0
51 0 255
51 0 204
51 0 153
51 0 102
51 0 51
51 0 0
0 255 255
0 255 204
0 255 153
0 255 102
0 255 51
0 255 0
0 204 255
0 204 204
0 204 153
0 204 102
0 204 51
0 204 0
0 153 255
0 153 204
0 153 153
0 153 102
0 153 51
0 153 0
0 102 255
0 102 204
0 102 153
0 102 102
0 102 51
0 102 0
0 51 255
0 51 204
0 51 153
0 51 102
0 51 51
0 51 0
0 0 255
0 0 204
0 0 153
0 0 102
0 0 51
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
        EOS
        @psp = Color::Palette::PSP.new(wsc)
      end

      def test_each
        assert_equal(256, @psp.size)
        @psp.each { |el| assert_kind_of(Color::RGB, el) }
      end

      def test_index
        assert_equal(Color::RGB::White, @psp[0])
      end
    end
  end
end
